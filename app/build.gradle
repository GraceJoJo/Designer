apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//1.当*.kt 后缀的Activity上使用@Router（path =xxxxx）时候遇到No match path；原因： *.kt 上的注解需要使用 kotlin方式的注解解释器才可以识别。
kapt {
    arguments {
        arg("moduleName", project.getName())
    }
    generateStubs = true
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.jojo.design"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
        //MultiDex分包方法
        multiDexEnabled true
        ndk {
            //APP的build.gradle设置支持的SO库架构
            abiFilters 'armeabi', 'armeabi-v7a'
        }
        //支持DataBinding
        dataBinding {
            enabled = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //  签名文件信息配置
    signingConfigs {
        config {
            storeFile file(KEY_PATH)
            storePassword KEY_PASS
            keyAlias ALIAS_NAME
            keyPassword ALIAS_PASS
        }
    }
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
        }
        release {
            //开启代码混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //所有需要使用ARouter的组件（使用了@Route(path = "/test/test")注解的模块）都需要添加下面这句依赖，否则会找不到路由（there's no route matched）
    kapt rootProject.ext.dependencies["arouter-compiler"]
    //解决Kotlin和DataBinding冲突
//    kapt 'androidx.databinding:databinding-compiler:1.0.0'
    //butterknife-compiler
    kapt rootProject.ext.dependencies["butterknife-compiler"]
    kapt 'com.google.dagger:dagger-compiler:2.11'
    implementation project(":common-base")
    implementation project(":common-ui")
    if (!Boolean.valueOf(rootProject.ext.isBuildModule)) {
        implementation project(":module-core")
        implementation project(":module-mall")
        implementation project(":module-discover")
    }

}
repositories {
    mavenCentral()
}
